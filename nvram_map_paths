#
# Defines a common variable/data layout, as well as the base offsets within
# the PCI SPROM at which instances of the structure are encoded.
#
# Any variables defined within a `struct` block will be interpreted relative to
# the provided array of SPROM base addresses.
#
# To produce SPROM variable names matching those used in the Broadcom HND
# ASCII 'key=value\0' NVRAM, the index number of the variable's
# struct instance will be appended (e.g., given a variable of noiselvl5ga, the
# generated variable instances will be named noiselvl5ga0, noiselvl5ga1,
# noiselvl5ga2, noiselvl5ga3 ...)
#
struct pathvars[] { 
	sprom {
		revs 2-3 {
			pathvars@0x1BE,
			pathvars@0x2BE,
			pathvars@0x3BE,
			pathvars@0x4BE
		}
		revs 4-8 {
			pathvars@0x1000,
			pathvars@0x2000,
			pathvars@0x3000,
			pathvars@0x4000
		}
		revs >= 11 {
			pathvars@0x1000,
			pathvars@0x2000,
			pathvars@0x3000
		}
	}

	uint noiselvl5ga[] {
		sfmt	hex
		sprom {
			revs >= 2048 {
				u8@0x1BE (mask=0x7C00, shift=10),
				u8@0x1C0 (mask=0x7C00, shift=10),
				u8@0x1C2 (mask=0x7C00, shift=10),
				u8@0x1C4 (mask=0x7C00, shift=10)
			}
		}
	}
}

uint boardflags {
	sfmt	hex
	sprom {
		revs 2-3	{ u16@0x72 }
		revs 4-7	{ u16@0x72|u16@0x38 }
		revs 8-15	{ u16@0x72|u16@0x7A }
		revs 16-31	{ u32@0x44 }
		revs 32-255	{ u32@0x4A }
		revs >= 256	{ u32@0x84 }
	}
}

led ledvariable {
	sfmt	hex
}

cc ccode {
	sfmt	ascii
}

private sint private_signedvar {
	sfmt	sdec
}

mac48 macaddr {
	sfmt	macaddr
	sprom {
		revs 256-2047	{ u8@0x8C (count=48) }
		revs 32-255	{ u8@0x52 (count=48) }
		revs 16-31	{ u8@0x4C (count=48) }
		revs 8-15	{ u8@0x4A (count=48) }
		revs >= 2048	{ u8@0x90 (count=48) }
	}
}


uint noiselvl5ga2[] {
	sfmt	hex
	sprom {
		revs >= 2048 {
			u8@0x1BE (mask=0x7C00, shift=10),
			u8@0x1C0 (mask=0x7C00, shift=10),
			u8@0x1C2 (mask=0x7C00, shift=10),
			u8@0x1C4 (mask=0x7C00, shift=10)
		}
	}
}
