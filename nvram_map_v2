# Antennas available
u8	aa2g		{ srom >= 11	0xA1 }
u8	aa5g		{ srom >= 11	0xA0 }

# ACPHY PA trimming parameters: 40
u16[12]	pa5gbw40a0		{ srom >= 11	0x110 }

# ACPHY PA trimming parameters: 80
u16[12]	pa5gbw80a0		{ srom >= 11	0x138 }

# ACPHY PA trimming parameters: 40/80
u16[12]	pa5gbw4080a0		{ srom >= 11	0x138 }
u16[12]	pa5gbw4080a1		{ srom >= 11	u16 @ 0xB6, u16 @ 0xBC, u16 @ 0xCE, u16 @ 0xD4, u16[8] @ 0x128 }

# ACPHY PA parameters: chain 0
u16	subband5gver		{ srom >= 11	0xD6 }
u16	maxp2ga0		{ srom >= 11	u8 @ 0xD9 }
u16[3]	pa2ga0		{ srom >= 11	0xDA }
u8[4]	maxp5ga0		{ srom >= 11	u8 @ 0xE5, u8 @ 0xE4, u8 @ 0xE7, u8 @ 0xE6 }
u16[12]	pa5ga0		{ srom >= 11	0xE8 }

# ACPHY PA parameters: chain 1
u16	maxp2ga1		{ srom >= 11	u8 @ 0x101 }
u16[3]	pa2ga1		{ srom >= 11	0x102 }
u8[4]	maxp5ga1		{ srom >= 11	u8 @ 0x10D, u8 @ 0x10C, u8 @ 0x10F, u8 @ 0x10E }
u16[12]	pa5ga1		{ srom >= 11	0x110 }

# ACPHY PA parameters: chain 2
u16	maxp2ga2		{ srom >= 11	u8 @ 0x129 }
u16[3]	pa2ga2		{ srom >= 11	0x12A }
u8[4]	maxp5ga2		{ srom >= 11	u8 @ 0x135, u8 @ 0x134, u8 @ 0x137, u8 @ 0x136 }
u16[12]	pa5ga2		{ srom >= 11	0x138 }

# ACPHY PA trimming parameters: CCK
u16[3]	pa2gccka0		{ srom >= 11	0x102 }

# ACPHY Power-per-rate 2gpo
u16	dot11agofdmhrbw202gpo		{ srom >= 11	0x15C }
u16	ofdmlrbw202gpo		{ srom >= 11	0x15E }

# ACPHY Power-per-rate 5gpo
u32	mcsbw805glpo		{ srom >= 11	0x168 }
u32	mcsbw805gmpo		{ srom >= 11	0x178 }
u32	mcsbw805ghpo		{ srom >= 11	0x188 }
u16	mcslr5glpo		{ srom >= 11	0x190 (&0xFFF) }
u16	mcslr5gmpo		{ srom >= 11	0x192 }
u16	mcslr5ghpo		{ srom >= 11	0x194 }

# ACPHY Power-per-rate sbpo
u16	sb20in40hrpo		{ srom >= 11	0x196 }
u16	sb20in80and160hr5glpo		{ srom >= 11	0x198 }
u16	sb40and80hr5glpo		{ srom >= 11	0x19A }
u16	sb20in80and160hr5gmpo		{ srom >= 11	0x19C }
u16	sb40and80hr5gmpo		{ srom >= 11	0x19E }
u16	sb20in80and160hr5ghpo		{ srom >= 11	0x1A0 }
u16	sb40and80hr5ghpo		{ srom >= 11	0x1A2 }
u16	sb20in40lrpo		{ srom >= 11	0x1A4 }
u16	sb20in80and160lr5glpo		{ srom >= 11	0x1A6 }
u16	sb40and80lr5glpo		{ srom >= 11	0x1A8 }
u16	sb20in80and160lr5gmpo		{ srom >= 11	0x1AA }
u16	sb40and80lr5gmpo		{ srom >= 11	0x1AC }
u16	sb20in80and160lr5ghpo		{ srom >= 11	0x1AE }
u16	sb40and80lr5ghpo		{ srom >= 11	0x1B0 }
u16	dot11agduphrpo		{ srom >= 11	0x1B2 }
u16	dot11agduplrpo		{ srom >= 11	0x1B4 }

# ACPHY rxgains: chain 0
u8 rxgains5gtrelnabypa0 {
	sfmt	sdec
	srom >= 11	0xE2 (&0x80, >>7)
}
u8 rxgains5gtrisoa0 {
	sfmt	sdec
	srom >= 11	0xE2 (&0x78, >>3)
}
u8 rxgains5gelnagaina0 {
	sfmt	sdec
	srom >= 11	0xE2 (&0x7)
}
u8 rxgains2gtrelnabypa0 {
	sfmt	sdec
	srom >= 11	0xE3 (&0x80, >>7)
}
u8 rxgains2gtrisoa0 {
	sfmt	sdec
	srom >= 11	0xE3 (&0x78, >>3)
}
u8 rxgains2gelnagaina0 {
	sfmt	sdec
	srom >= 11	0xE3 (&0x7)
}
u8 rxgains5ghtrelnabypa0 {
	sfmt	sdec
	srom >= 11	0xE0 (&0x80, >>7)
}
u8 rxgains5ghtrisoa0 {
	sfmt	sdec
	srom >= 11	0xE0 (&0x78, >>3)
}
u8 rxgains5ghelnagaina0 {
	sfmt	sdec
	srom >= 11	0xE0 (&0x7)
}
u8 rxgains5gmtrelnabypa0 {
	sfmt	sdec
	srom >= 11	0xE1 (&0x80, >>7)
}
u8 rxgains5gmtrisoa0 {
	sfmt	sdec
	srom >= 11	0xE1 (&0x78, >>3)
}
u8 rxgains5gmelnagaina0 {
	sfmt	sdec
	srom >= 11	0xE1 (&0x7)
}

# ACPHY rxgains: chain 1
u8 rxgains5gtrelnabypa1 {
	sfmt	sdec
	srom >= 11	0x10A (&0x80, >>7)
}
u8 rxgains5gtrisoa1 {
	sfmt	sdec
	srom >= 11	0x10A (&0x78, >>3)
}
u8 rxgains5gelnagaina1 {
	sfmt	sdec
	srom >= 11	0x10A (&0x7)
}
u8 rxgains2gtrelnabypa1 {
	sfmt	sdec
	srom >= 11	0x10B (&0x80, >>7)
}
u8 rxgains2gtrisoa1 {
	sfmt	sdec
	srom >= 11	0x10B (&0x78, >>3)
}
u8 rxgains2gelnagaina1 {
	sfmt	sdec
	srom >= 11	0x10B (&0x7)
}
u8 rxgains5ghtrelnabypa1 {
	sfmt	sdec
	srom >= 11	0x108 (&0x80, >>7)
}
u8 rxgains5ghtrisoa1 {
	sfmt	sdec
	srom >= 11	0x108 (&0x78, >>3)
}
u8 rxgains5ghelnagaina1 {
	sfmt	sdec
	srom >= 11	0x108 (&0x7)
}
u8 rxgains5gmtrelnabypa1 {
	sfmt	sdec
	srom >= 11	0x109 (&0x80, >>7)
}
u8 rxgains5gmtrisoa1 {
	sfmt	sdec
	srom >= 11	0x109 (&0x78, >>3)
}
u8 rxgains5gmelnagaina1 {
	sfmt	sdec
	srom >= 11	0x109 (&0x7)
}

# ACPHY rxgains: chain 2
u8 rxgains5gtrelnabypa2 {
	sfmt	sdec
	srom >= 11	0x132 (&0x80, >>7)
}
u8 rxgains5gtrisoa2 {
	sfmt	sdec
	srom >= 11	0x132 (&0x78, >>3)
}
u8 rxgains5gelnagaina2 {
	sfmt	sdec
	srom >= 11	0x132 (&0x7)
}
u8 rxgains2gtrelnabypa2 {
	sfmt	sdec
	srom >= 11	0x133 (&0x80, >>7)
}
u8 rxgains2gtrisoa2 {
	sfmt	sdec
	srom >= 11	0x133 (&0x78, >>3)
}
u8 rxgains2gelnagaina2 {
	sfmt	sdec
	srom >= 11	0x133 (&0x7)
}
u8 rxgains5ghtrelnabypa2 {
	sfmt	sdec
	srom >= 11	0x130 (&0x80, >>7)
}
u8 rxgains5ghtrisoa2 {
	sfmt	sdec
	srom >= 11	0x130 (&0x78, >>3)
}
u8 rxgains5ghelnagaina2 {
	sfmt	sdec
	srom >= 11	0x130 (&0x7)
}
u8 rxgains5gmtrelnabypa2 {
	sfmt	sdec
	srom >= 11	0x131 (&0x80, >>7)
}
u8 rxgains5gmtrisoa2 {
	sfmt	sdec
	srom >= 11	0x131 (&0x78, >>3)
}
u8 rxgains5gmelnagaina2 {
	sfmt	sdec
	srom >= 11	0x131 (&0x7)
}

u8	agbg0		{ srom >= 11	0xA2 }
u8	agbg1		{ srom >= 11	0xA3 }
u8	agbg2		{ srom >= 11	0xA4 }
u8	aga0		{ srom >= 11	0xA5 }
u8	aga1		{ srom >= 11	0xA6 }
u8	aga2		{ srom >= 11	0xA7 }

# 4328 5G antennas available/gain
u8	aa5g		{ srom >= 11	0xA0 }

# board flags (2 or 4 bytes)
u32	boardflags		{ srom >= 8	0x84 }
u32	boardflags2		{ srom >= 8	0x88 }
u32	boardflags3		{ srom >= 11	0x8C }

# board serial number, independent of mac addr
u16	boardnum		{ srom >= 11	0x94 }

# One byte board revision
u16	boardrev		{ srom >= 8	0x82 }

# 2 bytes; boardtype
u16	boardtype		{ srom >= 2	0x4 }

# 2 bytes each
# CCK Power offsets for 20 MHz rates (11, 5.5, 2, 1Mbps)
# cckbw202gpo cckbw20ul2gpo
# 
u16	cckbw202gpo		{ srom >= 11	0x150 }
u16	cckbw20ul2gpo		{ srom >= 11	0x152 }

# Country code (2 bytes ascii + 1 byte cctl)
# in rev 2
# 
char[2] ccode {
	sfmt	ccode
	srom >= 11	0x96
}

# 2 byte; txchain, rxchain
u8 txchain {
	all1	ignore
	srom >= 11	0xA9 (&0xF)
}
u8 rxchain {
	all1	ignore
	srom >= 11	0xA9 (&0xF0, >>4)
}
u16 antswitch {
	all1	ignore
	srom >= 11	u8 @ 0xA8
}

# Two 16bit values: PCI vendor & device id
private u16	devid		{ srom >= 8	u16 @ 0x60 }

# FEM config
u8 femctrl {
	sfmt	sdec
	srom >= 11	0xAA (&0xF8, >>3)
}
u8 papdcap2g {
	sfmt	sdec
	srom >= 11	0xAA (&0x4, >>2)
}
u8 tworangetssi2g {
	sfmt	sdec
	srom >= 11	0xAA (&0x2, >>1)
}
u8 pdgain2g {
	sfmt	sdec
	srom >= 11	u16 @ 0xAA (&0x1F0, >>4)
}
u8 epagain2g {
	sfmt	sdec
	srom >= 11	0xAB (&0xE, >>1)
}
u8 tssiposslope2g {
	sfmt	sdec
	srom >= 11	0xAB (&0x1)
}
u8 gainctrlsph {
	sfmt	sdec
	srom >= 11	0xAC (&0xF8, >>3)
}
u8 papdcap5g {
	sfmt	sdec
	srom >= 11	0xAC (&0x4, >>2)
}
u8 tworangetssi5g {
	sfmt	sdec
	srom >= 11	0xAC (&0x2, >>1)
}
u8 pdgain5g {
	sfmt	sdec
	srom >= 11	u16 @ 0xAC (&0x1F0, >>4)
}
u8 epagain5g {
	sfmt	sdec
	srom >= 11	0xAD (&0xE, >>1)
}
u8 tssiposslope5g {
	sfmt	sdec
	srom >= 11	0xAD (&0x1)
}

# 2 bytes; LED duty cycle
u8[2] leddc {
	sfmt	leddc
	all1	ignore
	srom >= 11	0x9E
}

# LED set
u8 ledbh0 {
	all1	ignore
	srom >= 11	0x9B
}
u8 ledbh1 {
	all1	ignore
	srom >= 11	0x9A
}
u8 ledbh2 {
	all1	ignore
	srom >= 11	0x9D
}
u8 ledbh3 {
	all1	ignore
	srom >= 11	0x9C
}

# mac addr override for the standard CIS LAN_NID
u8[48] macaddr {
	sfmt	macaddr
	srom >= 11	0x90
}

# 4 bytes each
# mcs 0-7  power-offset. LSB nibble: m0, MSB nibble: m7
# mcsbw202gpo  mcsbw20ul2gpo mcsbw402gpo
# 
u32	mcsbw202gpo		{ srom >= 11	0x154 }
u32	mcsbw402gpo		{ srom >= 11	0x158 }

# 4 bytes each
# 5G high subband mcs 0-7 power-offset.
# LSB nibble: m0, MSB nibble: m7
# mcsbw205ghpo  mcsbw20ul5ghpo mcsbw405ghpo
# 
u32	mcsbw205ghpo		{ srom >= 11	0x180 }
u32	mcsbw405ghpo		{ srom >= 11	0x184 }

# 4 bytes each
# 5G low subband mcs 0-7 power-offset.
# LSB nibble: m0, MSB nibble: m7
# mcsbw205glpo  mcsbw20ul5glpo mcsbw405glpo
# 
u32	mcsbw205glpo		{ srom >= 11	0x160 }
u32	mcsbw405glpo		{ srom >= 11	0x164 }

# 4 bytes each
# 5G mid subband mcs 0-7 power-offset.
# LSB nibble: m0, MSB nibble: m7
# mcsbw205gmpo  mcsbw20ul5gmpo mcsbw405gmpo
# 
u32	mcsbw205gmpo		{ srom >= 11	0x170 }
u32	mcsbw405gmpo		{ srom >= 11	0x174 }

u8	measpower		{ srom >= 11	0xB0 (&0xFE, >>1) }
u8	measpower1		{ srom >= 11	0xBB (&0x7F) }
u8	measpower2		{ srom >= 11	u16 @ 0xBA (&0x3F80, >>7) }
u16	rawtempsense		{ srom >= 11	0xB0 (&0x1FF) }

u8 noiselvl2ga0 {
	sfmt	sdec
	srom >= 11	0x1BD (&0x1F)
}
u8 noiselvl2ga1 {
	sfmt	sdec
	srom >= 11	u16 @ 0x1BC (&0x3E0, >>5)
}
u8 noiselvl2ga2 {
	sfmt	sdec
	srom >= 11	0x1BC (&0x7C, >>2)
}
u8[4] noiselvl5ga0 {
	sfmt	sdec
	srom >= 11	u8 @ 0x1BF (&0x1F), u8 @ 0x1C1 (&0x1F), u8 @ 0x1C3 (&0x1F), u8 @ 0x1C5 (&0x1F)
}
u8[4] noiselvl5ga1 {
	sfmt	sdec
	srom >= 11	u16[4] @ 0x1BE (&0x3E0, >>5)
}
u8[4] noiselvl5ga2 {
	sfmt	sdec
	srom >= 11	u8 @ 0x1BE (&0x7C, >>2), u8 @ 0x1C0 (&0x7C, >>2), u8 @ 0x1C2 (&0x7C, >>2), u8 @ 0x1C4 (&0x7C, >>2)
}

# paparambwver
u8 paparambwver {
	sfmt	sdec
	srom >= 11	0x190 (&0xF0, >>4)
}

# 8 or 30 bytes: 11n pa paramater for chain 0
u8	maxp2ga0		{ srom >= 11	0xD9 }
u8[4]	maxp5ga0		{ srom >= 11	u8 @ 0xE5, u8 @ 0xE4, u8 @ 0xE7, u8 @ 0xE6 }

# 8 or 30 bytes: 11n pa paramater for chain 1
u8	maxp2ga1		{ srom >= 11	0x101 }
u8[4]	maxp5ga1		{ srom >= 11	u8 @ 0x10D, u8 @ 0x10C, u8 @ 0x10F, u8 @ 0x10E }

# 8 or 30 bytes: 11n pa paramater for chain 2
u8	maxp2ga2		{ srom >= 11	0x129 }
u8[4]	maxp5ga2		{ srom >= 11	u8 @ 0x135, u8 @ 0x134, u8 @ 0x137, u8 @ 0x136 }

u16	pdoffset40ma0		{ srom >= 11	0xCA }
u16	pdoffset40ma1		{ srom >= 11	0xCC }
u16	pdoffset40ma2		{ srom >= 11	0xCE }
u16	pdoffset80ma0		{ srom >= 11	0xD0 }
u16	pdoffset80ma1		{ srom >= 11	0xD2 }
u16	pdoffset80ma2		{ srom >= 11	0xD4 }

u8	pdoffset2g40ma0		{ srom >= 11	0xC9 (&0xF) }
u8	pdoffset2g40ma1		{ srom >= 11	0xC9 (&0xF0, >>4) }
u8	pdoffset2g40ma2		{ srom >= 11	0xC8 (&0xF) }
u8	pdoffset2g40mvalid		{ srom >= 11	0xC8 (&0x80, >>7) }

# 1 byte;
u8	regrev		{ srom >= 11	0x99 }

u8	rxgainerr2ga0		{ srom >= 11	0x1C7 (&0x3F) }
u8	rxgainerr2ga1		{ srom >= 11	u16 @ 0x1C6 (&0x7C0, >>6) }
u8	rxgainerr2ga2		{ srom >= 11	0x1C6 (&0xF8, >>3) }
u8[4]	rxgainerr5ga0		{ srom >= 11	u8 @ 0x1C9 (&0x3F), u8 @ 0x1CB (&0x3F), u8 @ 0x1CD (&0x3F), u8 @ 0x1CF (&0x3F) }
u8[4]	rxgainerr5ga1		{ srom >= 11	u16[4] @ 0x1C8 (&0x7C0, >>6) }
u8[4]	rxgainerr5ga2		{ srom >= 11	u8 @ 0x1C8 (&0xF8, >>3), u8 @ 0x1CA (&0xF8, >>3), u8 @ 0x1CC (&0xF8, >>3), u8 @ 0x1CE (&0xF8, >>3) }

# subband5gver
u16	subband5gver		{ srom >= 11	0xD6 }

# 2 bytes
# byte1 tempthresh
# byte2 period(msb 4 bits) | hysterisis(lsb 4 bits)
# 
u8	tempthresh		{ srom >= 11	0xAE }
u8 temps_period {
	sfmt	sdec
	srom >= 11	0xB8 (&0xF)
}
u8 temps_hysteresis {
	sfmt	sdec
	srom >= 11	0xB8 (&0xF0, >>4)
}
u8 tempoffset {
	sfmt	sdec
	srom >= 11	0xAF
}
u8	tempsense_slope		{ srom >= 11	0xB3 }
u8	tempcorrx		{ srom >= 11	0xB2 (&0xFC, >>2) }
u8	tempsense_option		{ srom >= 11	0xB2 (&0x3) }
u8 phycal_tempdelta {
	sfmt	sdec
	srom >= 11	0xB9
}

# phy txbf rpcalvars
u16	rpcal2g		{ srom >= 11	0x16C }
u16	rpcal5gb0		{ srom >= 11	0x16E }
u16	rpcal5gb1		{ srom >= 11	0x17C }
u16	rpcal5gb2		{ srom >= 11	0x17E }
u16	rpcal5gb3		{ srom >= 11	0x18C }

# 4 byte Crystal frequency in kilohertz
u32 xtalfreq {
	sfmt	sdec
	srom >= 11	u16 @ 0xB4
}

# SROM variables not supported by CIS
u8	eu_edthresh2g		{ srom 11	0x1D1 }
u8	eu_edthresh5g		{ srom 11	0x1D0 }
u8	pdoffsetcckma0		{ srom >= 11	0x18F (&0xF) }
u8	pdoffsetcckma1		{ srom >= 11	0x18F (&0xF0, >>4) }
u8	pdoffsetcckma2		{ srom >= 11	0x18E (&0xF) }
u8	sar2g		{ srom >= 11	0x1BB }
u8	sar5g		{ srom >= 11	0x1BA }
u16	subvid		{ srom >= 2	0x6 }
u16	tssifloor2g		{ srom >= 11	0xBE (&0x3FF) }
u16[4]	tssifloor5g		{ srom >= 11	0xC0 (&0x3FF) }
u8	txidxcap2g		{ srom >= 11	u16 @ 0x1A8 (&0xFF0, >>4) }
u8	txidxcap5g		{ srom >= 11	u16 @ 0x1AC (&0xFF0, >>4) }

